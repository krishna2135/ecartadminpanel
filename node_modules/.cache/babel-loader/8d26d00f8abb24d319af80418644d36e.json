{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.countTypesTags = countTypesTags;\nexports.propsWithNoScriptRender = propsWithNoScriptRender;\nexports.wrapTypesToLazyChild = wrapTypesToLazyChild;\nexports.wrapTypesToNoScript = wrapTypesToNoScript;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _server = require('react-dom/server');\n\nvar _Lazy = require('../components/Lazy');\n\nvar _Lazy2 = _interopRequireDefault(_Lazy);\n\nvar _LazyChild = require('../components/LazyChild');\n\nvar _LazyChild2 = _interopRequireDefault(_LazyChild);\n\nvar _LazyGroup = require('../components/LazyGroup');\n\nvar _LazyGroup2 = _interopRequireDefault(_LazyGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction countTypesTags(types, children) {\n  var count = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!children) {\n    return count;\n  }\n\n  _react2.default.Children.forEach(children, function (child) {\n    if (!child || child.type === _Lazy2.default || child.type === _LazyGroup2.default || child.type === _LazyChild2.default) {\n      return;\n    } else if (types.includes(child.type)) {\n      count++;\n    } else {\n      var props = child.props || child._store && child._store.props || {};\n      count += countTypesTags(types, props.children);\n    }\n  });\n\n  return count;\n}\n\nfunction propsWithNoScriptRender(children, ltIE9) {\n  var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var noscript = (0, _server.renderToStaticMarkup)(_react2.default.createElement('noscript', null, children));\n\n  var __html = !ltIE9 ? noscript : noscript.replace('<noscript>', '<!--[if IE 9]><!--><noscript><!--<![endif]-->').replace('</noscript>', '<!--[if IE 9]><!--></noscript><!--<![endif]-->');\n\n  props.dangerouslySetInnerHTML = {\n    __html: __html\n  };\n  return props;\n}\n\nfunction wrapTypesToLazyChild(types, children, wrapper, callback) {\n  if (!children) {\n    return children;\n  }\n\n  return _react2.default.Children.map(children, function (child) {\n    if (!child || child.type === _Lazy2.default || child.type === _LazyGroup2.default || child.type === _LazyChild2.default) {\n      return child;\n    } else if (types.includes(child.type)) {\n      return _react2.default.createElement(_LazyChild2.default, {\n        callback: callback,\n        wrapper: wrapper\n      }, child);\n    } else {\n      var props = child.props || child._store && child._store.props || {};\n\n      var _children = wrapTypesToLazyChild(types, props.children, wrapper, callback);\n\n      if (_children !== props.children) {\n        return _react2.default.cloneElement(child, null, _children);\n      } else {\n        return child;\n      }\n    }\n  });\n}\n\nfunction wrapTypesToNoScript(types, children, ltIE9, wrapper) {\n  if (!children) {\n    return children;\n  }\n\n  return _react2.default.Children.map(children, function (child) {\n    if (!child || child.type === _Lazy2.default || child.type === _LazyGroup2.default || child.type === _LazyChild2.default) {\n      return child;\n    } else if (types.includes(child.type)) {\n      return _react2.default.createElement(wrapper, propsWithNoScriptRender(child, ltIE9));\n    } else {\n      var props = child.props || child._store && child._store.props || {};\n\n      var _children2 = wrapTypesToNoScript(types, props.children, ltIE9, wrapper);\n\n      if (_children2 !== props.children) {\n        return _react2.default.cloneElement(child, null, _children2);\n      } else {\n        return child;\n      }\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"script"}