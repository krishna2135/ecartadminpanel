{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LazyChild = function (_React$PureComponent) {\n  _inherits(LazyChild, _React$PureComponent);\n\n  function LazyChild(props) {\n    _classCallCheck(this, LazyChild);\n\n    var _this = _possibleConstructorReturn(this, (LazyChild.__proto__ || Object.getPrototypeOf(LazyChild)).call(this, props));\n\n    var _ref = props.children && (props.children.props || props.children._store && props.children._store.props) || {},\n        onError = _ref.onError,\n        onLoad = _ref.onLoad,\n        childProps = _objectWithoutProperties(_ref, ['onError', 'onLoad']);\n\n    _this.childOnError = onError;\n    _this.childOnLoad = onLoad;\n    _this.childProps = childProps;\n    _this.state = {\n      isFailed: false,\n      isLoaded: false\n    };\n    _this.onError = _this.onError.bind(_this);\n    _this.onLoad = _this.onLoad.bind(_this);\n    return _this;\n  }\n\n  _createClass(LazyChild, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.children === this.props.children) {\n        return;\n      }\n\n      var _ref2 = this.props.children && (this.props.children.props || this.props.children._store && this.props.children._store.props) || {},\n          onError = _ref2.onError,\n          onLoad = _ref2.onLoad,\n          childProps = _objectWithoutProperties(_ref2, ['onError', 'onLoad']);\n\n      this.childOnError = onError;\n      this.childOnLoad = onLoad;\n      this.childProps = childProps;\n    }\n  }, {\n    key: 'onError',\n    value: function onError(event) {\n      this.setState({\n        isFailed: true\n      }, this.props.callback);\n\n      if (this.childOnError) {\n        this.childOnError(event);\n      }\n    }\n  }, {\n    key: 'onLoad',\n    value: function onLoad(event) {\n      this.setState({\n        isLoaded: true\n      }, this.props.callback);\n\n      if (this.childOnLoad) {\n        this.childOnLoad(event);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          callback = _props.callback,\n          children = _props.children,\n          wrapper = _props.wrapper,\n          props = _objectWithoutProperties(_props, ['callback', 'children', 'wrapper']);\n\n      var child = _react2.default.Children.only(children);\n\n      return _react2.default.createElement(wrapper, _extends({}, props, this.state, {\n        childProps: this.childProps\n      }), !this.state.isFailed && !this.state.isLoaded ? _react2.default.cloneElement(child, {\n        onError: this.onError,\n        onLoad: this.onLoad\n      }) : child);\n    }\n  }]);\n\n  return LazyChild;\n}(_react2.default.PureComponent);\n\nexports.default = LazyChild;","map":null,"metadata":{},"sourceType":"script"}