{"ast":null,"code":"import _classCallCheck from \"E:\\\\ecart\\\\Admin-eCommerce-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\ecart\\\\Admin-eCommerce-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\ecart\\\\Admin-eCommerce-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\ecart\\\\Admin-eCommerce-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\ecart\\\\Admin-eCommerce-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\ecart\\\\Admin-eCommerce-ReactJS\\\\src\\\\components\\\\Orders\\\\Process.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { url, headers } from '../../config';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport './new.scss';\nimport Order from './Order';\n\nvar Process =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Process, _Component);\n\n  function Process() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Process);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Process)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      orders: [],\n      loading: true,\n      detail: false,\n      message: ''\n    };\n\n    _this.sendAwb = function (order_id, awb) {\n      var token = _this.props.user.token;\n\n      if (awb && order_id) {\n        _this.setState({\n          loading: true\n        });\n\n        axios.post(url + \"/order/confirm-shipping?order_id=\" + order_id, {\n          awb: awb\n        }, headers(token)).then(function (res) {\n          _this.setState({\n            message: 'Success confirm process shipping',\n            loading: false\n          });\n\n          _this.fetchOrdersProcess();\n        }).catch(function (err) {\n          _this.setState({\n            message: 'Failed confirm process shipping',\n            loading: false\n          });\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Process, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchOrdersProcess();\n    }\n  }, {\n    key: \"fetchOrdersProcess\",\n    value: function fetchOrdersProcess() {\n      var _this2 = this;\n\n      var orders = localStorage.getItem('orderprocess');\n\n      if (orders) {\n        this.setState({\n          orders: JSON.parse(orders),\n          loading: false\n        });\n      }\n\n      var token = this.props.user.token;\n      axios.get(url + \"/order/waiting-shipping\", headers(token)).then(function (res) {\n        if (_.isArray(res.data.data)) {\n          localStorage.setItem(\"orderprocess\", JSON.stringify(res.data.data));\n\n          _this2.setState({\n            orders: res.data.data,\n            loading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          orders = _this$state.orders,\n          loading = _this$state.loading,\n          message = _this$state.message;\n      return React.createElement(\"div\", {\n        className: \"new-order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, message), loading ? React.createElement(\"div\", {\n        class: \"load\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" \", orders.length < 1 && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Empty\"), \" \", orders.length > 0 && orders.map(function (order) {\n        return React.createElement(Order, {\n          key: order.order_id,\n          status: \"process\",\n          order: order,\n          sendAwb: _this3.sendAwb,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Process;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.userReducer\n  };\n};\n\nexport default connect(mapStateToProps)(Process);","map":{"version":3,"sources":["E:\\ecart\\Admin-eCommerce-ReactJS\\src\\components\\Orders\\Process.jsx"],"names":["React","Component","axios","url","headers","connect","_","Order","Process","state","orders","loading","detail","message","sendAwb","order_id","awb","token","props","user","setState","post","then","res","fetchOrdersProcess","catch","err","localStorage","getItem","JSON","parse","get","isArray","data","setItem","stringify","length","map","order","mapStateToProps","userReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport { url, headers } from '../../config'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\nimport './new.scss'\nimport Order from './Order'\n\nclass Process extends Component {\n    state = {\n        orders: [],\n        loading: true,\n        detail: false,\n        message: ''\n    }\n\n    componentDidMount(){\n        this.fetchOrdersProcess()\n    }\n\n    fetchOrdersProcess(){\n        let orders = localStorage.getItem('orderprocess') \n        if(orders){\n            this.setState({ orders: JSON.parse(orders), loading: false })\n        }\n        let token = this.props.user.token\n        axios.get( url + \"/order/waiting-shipping\" , headers(token) )\n        .then( res => {\n            if(_.isArray(res.data.data)){\n                localStorage.setItem(\"orderprocess\", JSON.stringify(res.data.data))\n                this.setState({ orders: res.data.data, loading: false })\n            }\n        })\n    }\n\n    sendAwb = (order_id, awb) => {\n        const token = this.props.user.token\n\n        if( awb && order_id ){\n            this.setState({loading: true})\n            axios.post( url + \"/order/confirm-shipping?order_id=\"+order_id, { awb } , headers(token) )\n            .then(res=>{\n                this.setState({ message: 'Success confirm process shipping', loading: false })\n                this.fetchOrdersProcess()\n            })\n            .catch(err=>{\n                this.setState({ message: 'Failed confirm process shipping', loading: false })\n            })\n        }\n    }\n\n    render() {\n        const { orders, loading, message } = this.state\n        return (\n            <div className=\"new-order\">\n                <span>{message}</span>\n                { loading ? <div class=\"load\"><div></div><div></div><div></div></div> :\n                    <div> { orders.length < 1 && <div>Empty</div> } {\n                    orders.length > 0 && orders.map(order => \n                        <Order key={order.order_id} status=\"process\" order={order} sendAwb={this.sendAwb} />\n                        )\n                    }</div>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return({\n        user : state.userReducer\n    })\n}\n\nexport default connect(mapStateToProps)(Process);"]},"metadata":{},"sourceType":"module"}