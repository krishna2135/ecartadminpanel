{"ast":null,"code":"import _defineProperty from \"E:\\\\ecart\\\\Admin-eCommerce-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"E:\\\\ecart\\\\Admin-eCommerce-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\ecart\\\\Admin-eCommerce-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\ecart\\\\Admin-eCommerce-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\ecart\\\\Admin-eCommerce-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\ecart\\\\Admin-eCommerce-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\ecart\\\\Admin-eCommerce-ReactJS\\\\src\\\\components\\\\Product\\\\Update.jsx\";\nimport React, { Component } from 'react';\nimport './update.scss';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { url, headers } from '../../config';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport Header from '../Header';\nimport Navbar from '../Navbar';\nimport Loading from '../Loading';\n\nvar UpdateProduct =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateProduct, _Component);\n\n  function UpdateProduct() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpdateProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpdateProduct)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      product: _this.props.location.state.product,\n      imagePreview: '',\n      message: '',\n      messageadd: '',\n      sizes: [],\n      stocks: [],\n      sizeinput: '',\n      stockinput: '',\n      description: '',\n      success: false,\n      loading: false,\n      categories: [],\n      subcategories: []\n    };\n\n    _this.selectCategory = function (e) {\n      _this.setState({\n        category_id: e.target.value\n      });\n\n      var categories = _this.state.categories;\n      var selectcategories = categories.filter(function (el) {\n        return el.category_id == e.target.value;\n      });\n\n      if (!_.isUndefined(selectcategories[0])) {\n        _this.setState({\n          subcategories: selectcategories[0].subcategories\n        });\n      } else {\n        _this.setState({\n          subcategories: []\n        });\n      }\n    };\n\n    _this.addSize = function () {\n      var _this$state = _this.state,\n          sizes = _this$state.sizes,\n          inputsize = _this$state.inputsize,\n          stocks = _this$state.stocks,\n          inputstock = _this$state.inputstock;\n\n      if (inputsize && inputstock) {\n        var size = sizes;\n        size.push(inputsize);\n        var stock = stocks;\n        stock.push(inputstock);\n\n        _this.setState({\n          sizes: size,\n          stocks: stock,\n          inputsize: '',\n          inputstock: '',\n          messageadd: ''\n        });\n      } else {\n        _this.setState({\n          messageadd: 'Submit size and stock'\n        });\n      }\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleImage = function (e) {\n      var file = e.target.files[0];\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          file: file,\n          image: reader.result\n        });\n      };\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$state2 = _this.state,\n          image = _this$state2.image,\n          file = _this$state2.file,\n          sizes = _this$state2.sizes,\n          stocks = _this$state2.stocks,\n          name = _this$state2.name,\n          code = _this$state2.code,\n          category_id = _this$state2.category_id,\n          sub_category_id = _this$state2.sub_category_id,\n          price = _this$state2.price,\n          weight = _this$state2.weight,\n          description = _this$state2.description,\n          product_id = _this$state2.product_id;\n      var token = _this.props.user.token;\n      if (!description) _this.setState({\n        message: 'Submit description'\n      });\n      if (sizes.length < 1) _this.setState({\n        message: 'Click add size and stock'\n      });\n      if (!weight) _this.setState({\n        message: 'Submit weight'\n      });\n      if (!price) _this.setState({\n        message: 'Submit price'\n      });\n      if (!sub_category_id) _this.setState({\n        message: 'Select subcategory'\n      });\n      if (!category_id) _this.setState({\n        message: 'Select category'\n      });\n      if (!code) _this.setState({\n        message: 'Submit code'\n      });\n      if (!name) _this.setState({\n        message: 'Submit name'\n      });\n      if (!image) _this.setState({\n        message: 'Submit image'\n      });\n\n      _this.setState({\n        messageadd: '',\n        loading: true\n      }); //post data if no change image\n\n\n      if (!file && image && name && code && category_id && sub_category_id && price && weight && sizes && stocks && description) {\n        var data = {\n          name: name,\n          code: code,\n          category_id: category_id,\n          sub_category_id: sub_category_id,\n          price: price,\n          weight: weight,\n          description: description,\n          image: image,\n          size: sizes,\n          stock: stocks\n        };\n        axios.put(url + \"/product/\" + product_id, data, headers(token)).then(function (res) {\n          _this.setState({\n            loading: false,\n            success: true,\n            message: '',\n            file: null\n          });\n\n          setTimeout(function () {\n            _this.setState({\n              success: false,\n              product: null\n            });\n          }, 2000);\n        }).catch(function (err) {\n          _this.setState({\n            message: 'Failed add product',\n            loading: false\n          });\n        });\n      } //Post data if change image\n\n\n      if (file && name && code && category_id && sub_category_id && price && weight && sizes && stocks && description) {\n        var _data = new FormData();\n\n        _data.append('image', file);\n\n        axios.post(url + \"/product/upload-image\", _data, headers(token)).then(function (res) {\n          var data = {\n            name: name,\n            code: code,\n            category_id: category_id,\n            sub_category_id: sub_category_id,\n            price: price,\n            weight: weight,\n            description: description,\n            image: res.data.url,\n            size: sizes,\n            stock: stocks\n          };\n          axios.put(url + \"/product/\" + product_id, data, headers(token)).then(function (res) {\n            _this.setState({\n              loading: false,\n              success: true,\n              message: '',\n              file: null\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                success: false,\n                product: null\n              });\n            }, 3000);\n          }).catch(function (err) {\n            _this.setState({\n              message: 'Failed add product',\n              loading: false\n            });\n          });\n        }).catch(function (err) {\n          _this.setState({\n            message: 'Failed connect server',\n            loading: false\n          });\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(UpdateProduct, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var categories = this.props.categories.data;\n\n      if (_.isArray(categories)) {\n        this.setState({\n          categories: categories\n        });\n      }\n\n      this.fetchProduct();\n    }\n  }, {\n    key: \"fetchProduct\",\n    value: function fetchProduct() {\n      var _this2 = this;\n\n      if (this.props.location.state.product) {\n        var _this$props$location$ = this.props.location.state.product,\n            product_id = _this$props$location$.product_id,\n            name = _this$props$location$.name,\n            code = _this$props$location$.code,\n            category_id = _this$props$location$.category_id,\n            sub_category_id = _this$props$location$.sub_category_id,\n            price = _this$props$location$.price,\n            weight = _this$props$location$.weight,\n            description = _this$props$location$.description,\n            image = _this$props$location$.image,\n            sizes = _this$props$location$.sizes,\n            stocks = _this$props$location$.stocks;\n        this.setState({\n          sizes: sizes,\n          stocks: stocks,\n          name: name,\n          code: code,\n          category_id: category_id,\n          sub_category_id: sub_category_id,\n          price: price,\n          weight: weight,\n          description: description,\n          image: image,\n          product_id: product_id\n        });\n      } else {\n        var id = this.props.match.params.id;\n        axios(url + \"/product/\" + id).then(function (res) {\n          if (res.data) {\n            var _res$data = res.data,\n                _product_id = _res$data.product_id,\n                _name = _res$data.name,\n                _code = _res$data.code,\n                _category_id = _res$data.category_id,\n                _sub_category_id = _res$data.sub_category_id,\n                _price = _res$data.price,\n                _weight = _res$data.weight,\n                _description = _res$data.description,\n                _image = _res$data.image,\n                _sizes = _res$data.sizes,\n                _stocks = _res$data.stocks;\n\n            _this2.setState({\n              sizes: _sizes,\n              stocks: _stocks,\n              name: _name,\n              code: _code,\n              category_id: _category_id,\n              sub_category_id: _sub_category_id,\n              price: _price,\n              weight: _weight,\n              description: _description,\n              image: _image,\n              product_id: _product_id\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"changeSize\",\n    value: function changeSize(e, i) {\n      var all = this.state.sizes;\n      all[i] = e.target.value;\n      this.setState({\n        sizes: all\n      });\n    }\n  }, {\n    key: \"changeStock\",\n    value: function changeStock(e, i) {\n      var all = this.state.stocks;\n      all[i] = e.target.value;\n      this.setState({\n        stocks: all\n      });\n    }\n  }, {\n    key: \"deleteSizes\",\n    value: function deleteSizes(i) {\n      var allsizes = this.state.sizes;\n      var allstocks = this.state.stocks;\n      allsizes.splice(i, 1);\n      allstocks.splice(i, 1);\n      this.setState({\n        sizes: allsizes,\n        stocks: allstocks\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state3 = this.state,\n          product = _this$state3.product,\n          product_id = _this$state3.product_id,\n          categories = _this$state3.categories,\n          subcategories = _this$state3.subcategories,\n          loading = _this$state3.loading,\n          inputsize = _this$state3.inputsize,\n          inputstock = _this$state3.inputstock,\n          sizes = _this$state3.sizes,\n          stocks = _this$state3.stocks,\n          message = _this$state3.message,\n          messageadd = _this$state3.messageadd,\n          success = _this$state3.success,\n          name = _this$state3.name,\n          code = _this$state3.code,\n          category_id = _this$state3.category_id,\n          sub_category_id = _this$state3.sub_category_id,\n          price = _this$state3.price,\n          weight = _this$state3.weight,\n          description = _this$state3.description,\n          image = _this$state3.image;\n      return React.createElement(\"div\", {\n        className: \"update-product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: {\n          pathname: \"/product/\".concat(product_id),\n          state: product\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"demo-icon icon-cancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"\\uE80F\"))), loading ? React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }) : '', React.createElement(\"div\", {\n        className: \"add-product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Update Product\"), success ? React.createElement(\"div\", {\n        className: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Success\")) : \"\", React.createElement(\"div\", {\n        className: \"photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: image,\n        alt: \"imagePreview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        htmlFor: \"photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Image  \", React.createElement(\"i\", {\n        className: \"demo-icon icon-picture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"\\uE812\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.handleImage,\n        id: \"photo\",\n        type: \"file\",\n        accept: \"image/x-png,image/gif,image/jpeg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        value: name,\n        onChange: this.handleChange,\n        name: \"name\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"Code\"), React.createElement(\"input\", {\n        value: code,\n        onChange: this.handleChange,\n        name: \"code\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Category\"), React.createElement(\"select\", {\n        value: category_id,\n        onChange: this.selectCategory,\n        name: \"category_id\",\n        id: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"select\"), categories.map(function (category) {\n        return React.createElement(\"option\", {\n          key: category.category_id,\n          value: category.category_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, category.category_name);\n      })), React.createElement(\"label\", {\n        htmlFor: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Subcategory\"), React.createElement(\"select\", {\n        value: sub_category_id,\n        onChange: this.handleChange,\n        name: \"sub_category_id\",\n        id: \"sub_category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"select\"), subcategories.map(function (subcategory) {\n        return React.createElement(\"option\", {\n          key: subcategory.sub_category_id,\n          value: subcategory.sub_category_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, subcategory.name);\n      })), React.createElement(\"label\", {\n        htmlFor: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"input\", {\n        value: price,\n        placeholder: \"Rp\",\n        onChange: this.handleChange,\n        name: \"price\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"Weight\"), React.createElement(\"input\", {\n        value: weight,\n        placeholder: \"gram\",\n        onChange: this.handleChange,\n        name: \"weight\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Size and Stock\"), React.createElement(\"div\", {\n        className: \"size-stock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"Size\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), _.isArray(sizes) && sizes.map(function (size, i) {\n        return React.createElement(\"div\", {\n          className: \"size\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          value: size,\n          onChange: function onChange(e) {\n            return _this3.changeSize(e, i);\n          },\n          type: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }));\n      }), React.createElement(\"input\", {\n        placeholder: \"Input size\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            inputsize: e.target.value\n          });\n        },\n        value: inputsize,\n        name: \"size\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"Stock\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }), _.isArray(stocks) && stocks.map(function (stock, i) {\n        return React.createElement(\"div\", {\n          className: \"stock\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          onChange: function onChange(e) {\n            return _this3.changeStock(e, i);\n          },\n          value: stock,\n          type: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }), \" \", React.createElement(\"span\", {\n          onClick: function onClick() {\n            return _this3.deleteSizes(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"demo-icon icon-minus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }, \"\\uE814\")), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }));\n      }), React.createElement(\"input\", {\n        placeholder: \"Input stock\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            inputstock: e.target.value\n          });\n        },\n        value: inputstock,\n        name: \"inputstock\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }))), React.createElement(\"span\", {\n        className: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, messageadd), React.createElement(\"span\", {\n        className: \"add\",\n        onClick: this.addSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"Add size\"), React.createElement(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"Description\"), React.createElement(ReactQuill, {\n        className: \"description\",\n        value: description,\n        onChange: function onChange(value) {\n          return _this3.setState({\n            description: value\n          });\n        },\n        id: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, message), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"Save\"))));\n    }\n  }]);\n\n  return UpdateProduct;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    categories: state.categoriesReducer,\n    user: state.userReducer\n  };\n};\n\nexport default connect(mapStateToProps)(UpdateProduct);","map":{"version":3,"sources":["E:\\ecart\\Admin-eCommerce-ReactJS\\src\\components\\Product\\Update.jsx"],"names":["React","Component","Link","axios","ReactQuill","url","headers","connect","_","Header","Navbar","Loading","UpdateProduct","state","product","props","location","imagePreview","message","messageadd","sizes","stocks","sizeinput","stockinput","description","success","loading","categories","subcategories","selectCategory","e","setState","category_id","target","value","selectcategories","filter","el","isUndefined","addSize","inputsize","inputstock","size","push","stock","handleChange","name","handleImage","file","files","reader","FileReader","readAsDataURL","onloadend","image","result","handleSubmit","preventDefault","code","sub_category_id","price","weight","product_id","token","user","length","data","put","then","res","setTimeout","catch","err","FormData","append","post","isArray","fetchProduct","id","match","params","i","all","allsizes","allstocks","splice","pathname","map","category","category_name","subcategory","changeSize","changeStock","deleteSizes","mapStateToProps","categoriesReducer","userReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './update.scss'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css'\nimport { url, headers } from '../../config'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\n\nimport Header from '../Header'\nimport Navbar from '../Navbar'\nimport Loading from '../Loading'\n\nclass UpdateProduct extends Component {\n    state = {\n        product: this.props.location.state.product,\n        imagePreview : '',\n        message : '',\n        messageadd: '',\n        sizes: [],\n        stocks: [],\n        sizeinput: '',\n        stockinput: '',\n        description: '',\n        success: false,\n        loading: false,\n        categories: [],\n        subcategories: [],\n    }\n\n    componentDidMount() {\n        let categories = this.props.categories.data\n        if(_.isArray(categories)){\n            this.setState({ categories })\n        }\n        this.fetchProduct()\n    }\n\n    fetchProduct() {\n        if(this.props.location.state.product){\n            const { product_id, name, code, category_id, sub_category_id, price, weight, description, image, sizes, stocks } = this.props.location.state.product\n            this.setState({\n                sizes,\n                stocks,\n                name,\n                code, \n                category_id, \n                sub_category_id, \n                price, \n                weight, \n                description, \n                image,\n                product_id\n            })\n        } else {\n            let id = this.props.match.params.id\n            axios( url + \"/product/\" + id )\n            .then(res=>{\n                if(res.data){\n    \n                    const { product_id, name, code, category_id, sub_category_id, price, weight, description, image, sizes, stocks } = res.data\n                    this.setState({\n                        sizes,\n                        stocks,\n                        name,\n                        code, \n                        category_id, \n                        sub_category_id, \n                        price, \n                        weight, \n                        description, \n                        image,\n                        product_id\n                    })\n                }\n            })\n        }\n    }\n\n    selectCategory = (e) => {\n        this.setState({\n            category_id : e.target.value\n        })\n\n        let categories = this.state.categories\n        let selectcategories = categories.filter((el)=>{\n            return(\n                el.category_id == e.target.value\n            )\n        })\n\n        if(!_.isUndefined(selectcategories[0])){\n            this.setState({ subcategories: selectcategories[0].subcategories })\n        } else {\n            this.setState({ subcategories: [] })\n        }\n    }\n\n    addSize = () => {\n        const { sizes, inputsize, stocks, inputstock } = this.state\n\n        if(inputsize && inputstock){\n            \n            let size = sizes\n            size.push(inputsize)\n    \n            let stock = stocks\n            stock.push(inputstock)\n    \n            this.setState({\n                sizes : size,\n                stocks : stock,\n                inputsize: '',\n                inputstock : '',\n                messageadd: ''\n            })\n        } else {\n            this.setState({ messageadd: 'Submit size and stock' })\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    changeSize (e, i) {\n        let all = this.state.sizes\n        all[i] = e.target.value\n        this.setState({\n            sizes: all\n        })\n    }\n\n    changeStock (e, i) {\n        let all = this.state.stocks\n        all[i] = e.target.value\n        this.setState({\n            stocks: all\n        })\n    }\n\n    deleteSizes (i) {\n        let allsizes = this.state.sizes\n        let allstocks = this.state.stocks    \n        \n        allsizes.splice(i,1)\n        allstocks.splice(i,1)\n\n        this.setState({\n            sizes: allsizes,\n            stocks: allstocks\n        })\n    }\n\n    handleImage = (e) => {\n        let file = e.target.files[0]\n        let reader = new FileReader()\n\n        reader.readAsDataURL(file)\n\n        reader.onloadend = () => {\n            this.setState({\n                file: file,\n                image: reader.result\n            })\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const { image, file, sizes, stocks, name, code, category_id, sub_category_id, price, weight, description, product_id } = this.state\n        const token = this.props.user.token\n        \n        if(!description) this.setState({ message: 'Submit description' })        \n        if(sizes.length<1) this.setState({ message: 'Click add size and stock' })\n        if(!weight) this.setState({ message: 'Submit weight' })\n        if(!price) this.setState({ message: 'Submit price' })\n        if(!sub_category_id) this.setState({ message: 'Select subcategory' })\n        if(!category_id) this.setState({ message: 'Select category' })\n        if(!code) this.setState({ message: 'Submit code' })\n        if(!name) this.setState({ message: 'Submit name' })\n        if(!image) this.setState({ message: 'Submit image' })\n\n        this.setState({ messageadd: '', loading: true })\n\n        //post data if no change image\n        if(!file && image && name && code && category_id && sub_category_id && price && weight && sizes && stocks && description) {\n\n            let data = { name, code, category_id, sub_category_id, price, weight, description, image, size: sizes, stock: stocks }\n    \n            axios.put( url + \"/product/\" + product_id , data, headers(token) )\n            .then(res=>{\n                this.setState({ \n                    loading: false,\n                    success: true, \n                    message: '',\n                    file: null\n                })\n                setTimeout(() => {\n                    this.setState({ success: false, product: null })\n                }, 2000);\n            })\n            .catch(err=>{\n                this.setState({ message: 'Failed add product', loading: false })\n            })\n        }\n\n        //Post data if change image\n        if(file && name && code && category_id && sub_category_id && price && weight && sizes && stocks && description ) {\n            let data = new FormData()\n            data.append('image', file )\n            axios.post( url + \"/product/upload-image\" , data , headers(token) )\n            .then(res=>{\n\n                let data = { name, code, category_id, sub_category_id, price, weight, description, image: res.data.url, size: sizes, stock: stocks }\n        \n                axios.put( url + \"/product/\" + product_id , data, headers(token) )\n                .then(res=>{\n                    this.setState({ \n                        loading: false,\n                        success: true, \n                        message: '',\n                        file: null\n                    })\n                    setTimeout(() => {\n                        this.setState({ success: false, product: null })\n                    }, 3000);\n                })\n                .catch(err=>{\n                    this.setState({ message: 'Failed add product', loading: false })\n                })\n\n            })\n            .catch(err=>{\n                this.setState({ message: 'Failed connect server', loading: false })\n            })\n\n        } \n        \n    }\n\n    render() {\n        const { product, product_id, categories, subcategories, loading, inputsize, inputstock, sizes, stocks, message, messageadd, success, name, code, category_id, sub_category_id, price, weight, description, image } = this.state\n        return (\n            <div className=\"update-product\">\n                <Header />\n                <Navbar />\n\n                <Link to={{ pathname:`/product/${product_id}`, state: product }}>\n                    <div className=\"cancel\"><i className=\"demo-icon icon-cancel\">&#xe80f;</i></div>\n                </Link>\n                \n                { loading ? <Loading /> : '' }\n\n                <div className=\"add-product\">\n                    <h1>Update Product</h1>\n                    { success ? <div className=\"success\"><div>Success</div></div> : \"\" }\n\n                    <div className=\"photo\">\n                        <div className=\"image\">\n                            <img src={image} alt=\"imagePreview\"/> \n                        </div>\n                        <label htmlFor=\"photo\">Image  <i className=\"demo-icon icon-picture\">&#xe812;</i></label><br/>\n                        <input onChange={this.handleImage} id=\"photo\" type=\"file\" accept=\"image/x-png,image/gif,image/jpeg\"/>\n                    </div>\n\n                    <form onSubmit={this.handleSubmit}>\n                        <label htmlFor=\"\">Name</label>\n                        <input value={name} onChange={this.handleChange} name=\"name\" type=\"text\"/>\n                        <label htmlFor=\"\">Code</label>\n                        <input value={code} onChange={this.handleChange} name=\"code\" type=\"text\"/>\n                        <label htmlFor=\"\">Category</label>\n                        <select value={category_id} onChange={this.selectCategory} name=\"category_id\" id=\"category\">\n                            <option value=\"\">select</option>\n                            {\n                                categories.map(category=>{\n                                    return(\n                                        <option key={category.category_id} value={category.category_id}>{category.category_name}</option>\n                                    )\n                                })\n                            }\n                        </select>\n                        <label htmlFor=\"\">Subcategory</label>\n                        <select value={sub_category_id} onChange={this.handleChange} name=\"sub_category_id\" id=\"sub_category\">\n                            <option value=\"\">select</option>\n                            {\n                                subcategories.map(subcategory=>{\n                                    return(\n                                        <option key={subcategory.sub_category_id} value={subcategory.sub_category_id}>{subcategory.name}</option>\n                                    )\n                                })\n                            }\n                        </select>\n                        <label htmlFor=\"\">Price</label>\n                        <input value={price} placeholder=\"Rp\" onChange={this.handleChange} name=\"price\" type=\"text\"/>\n                        <label htmlFor=\"\">Weight</label>\n                        <input value={weight} placeholder=\"gram\"  onChange={this.handleChange} name=\"weight\" type=\"text\"/>\n                        \n                        <label htmlFor=\"\">Size and Stock</label>\n\n                        <div className=\"size-stock\">\n                            <div>\n                                <span>Size</span><br/>\n                                <hr/>\n                                {\n                                   _.isArray(sizes) && sizes.map((size, i)=>{\n                                        return(\n                                                <div className=\"size\" key={i}>\n                                                    <input value={size} onChange={ (e)=>this.changeSize(e, i) } type=\"text\"/>\n                                                    <hr/>\n                                                </div>\n                                        )\n                                    })\n                                }\n                                <input placeholder=\"Input size\" onChange={(e)=>this.setState({ inputsize: e.target.value })} value={inputsize} name=\"size\" type=\"text\"/>\n                            </div>\n                            <div>\n                                <span>Stock</span><br/>\n                                <hr/>\n                                {\n                                   _.isArray(stocks) && stocks.map((stock, i)=>{\n                                        return(\n                                                <div className=\"stock\" key={i}>\n                                                    <input onChange={(e)=>this.changeStock(e,i)} value={stock} type=\"text\"/> <span onClick={()=>this.deleteSizes(i)}><i className=\"demo-icon icon-minus\">&#xe814;</i></span>\n                                                    <hr/>\n                                                </div>\n                                        )\n                                    })\n                                }\n                                <input placeholder=\"Input stock\" onChange={(e)=> this.setState({ inputstock: e.target.value })} value={inputstock} name=\"inputstock\" type=\"text\"/>\n                            </div>\n                        \n                        </div>\n                        <span className=\"message\">{messageadd}</span>\n                        <span className=\"add\" onClick={this.addSize}>Add size</span>\n\n                        <label htmlFor=\"description\">Description</label>\n\n                        <ReactQuill className=\"description\" value={description} onChange={ (value)=>this.setState({ description: value }) } id=\"description\"/>\n\n                        <span className=\"message\">{message}</span>\n                        <button type=\"submit\">Save</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return({\n        categories : state.categoriesReducer,\n        user : state.userReducer\n    })\n}\n\nexport default connect(mapStateToProps )(UpdateProduct);"]},"metadata":{},"sourceType":"module"}