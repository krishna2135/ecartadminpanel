{"ast":null,"code":"import _ from 'lodash'; //endpoint\n\nexport var url = \"http://basket.langsfree.com\"; //headers\n\nexport function headers(token) {\n  return {\n    headers: {\n      'Authorization': \"Bearer \".concat(token),\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n  };\n} //convert price\n\nexport function price(number) {\n  if (_.isNumber(number)) {\n    var reverse = number.toString().split('').reverse().join(''),\n        thousand = reverse.match(/\\d{1,3}/g);\n    thousand = thousand.join('.').split('').reverse().join('');\n    return thousand + \",-\";\n  } else {\n    return number;\n  }\n}","map":{"version":3,"sources":["E:\\ecart\\Admin-eCommerce-ReactJS\\src\\config.js"],"names":["_","url","headers","token","price","number","isNumber","reverse","toString","split","join","thousand","match"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd,C,CAEA;;AACA,OAAO,IAAMC,GAAG,GAAG,6BAAZ,C,CAEP;;AACA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAC3B,SACI;AACID,IAAAA,OAAO,EAAE;AACT,wCAA4BC,KAA5B,CADS;AAET,sBAAgB,kBAFP;AAGT,gBAAW;AAHF;AADb,GADJ;AASH,C,CAED;;AACA,OAAO,SAASC,KAAT,CAAeC,MAAf,EAAsB;AACzB,MAAGL,CAAC,CAACM,QAAF,CAAWD,MAAX,CAAH,EAAsB;AACtB,QAAIE,OAAO,GAAGF,MAAM,CAACG,QAAP,GAAkBC,KAAlB,CAAwB,EAAxB,EAA4BF,OAA5B,GAAsCG,IAAtC,CAA2C,EAA3C,CAAd;AAAA,QACAC,QAAQ,GAAGJ,OAAO,CAACK,KAAR,CAAc,UAAd,CADX;AAEAD,IAAAA,QAAQ,GAAGA,QAAQ,CAACD,IAAT,CAAc,GAAd,EAAmBD,KAAnB,CAAyB,EAAzB,EAA6BF,OAA7B,GAAuCG,IAAvC,CAA4C,EAA5C,CAAX;AACA,WAAOC,QAAQ,GAAG,IAAlB;AACC,GALD,MAKO;AACH,WAAON,MAAP;AACH;AACJ","sourcesContent":["import _ from 'lodash'\n\n//endpoint\nexport const url = \"http://basket.langsfree.com\"\n\n//headers\nexport function headers(token) {\n    return(\n        {   \n            headers: {\n            'Authorization' : `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept' : 'application/json'\n            }\n        }\n    )\n}\n\n//convert price\nexport function price(number){\n    if(_.isNumber(number)){\n    let reverse = number.toString().split('').reverse().join(''),\n    thousand = reverse.match(/\\d{1,3}/g);\n    thousand = thousand.join('.').split('').reverse().join('');\n    return thousand + \",-\";\n    } else {\n        return number\n    }\n}"]},"metadata":{},"sourceType":"module"}